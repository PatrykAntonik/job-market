name: CI/CD pipeline for staging branches
run-name: ${{ github.actor }}
on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
    inputs:
      skip_lint:
        description: "Skip lint stage"
        type: boolean
        required: false
        default: false
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true
jobs:
  test:
    if: ${{ !github.event.inputs.skip_lint }}
    name: Test, lint and format
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jobmarket
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d jobmarket"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/jobmarket?sslmode=disable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Poetry
        run: pipx install poetry
      - name: Configure Poetry venv
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Check code formatting
        run: poetry run black JobMarket2 JobApp --check
      - name: Check import sorting
        run: poetry run isort -c JobApp JobMarket2
      - name: Check code linting
        run: poetry run pylint --fail-under=8.0 JobApp JobMarket2
      - name: Run tests
        id: tests
        continue-on-error: true
        env:
          DJANGO_SETTINGS_MODULE: JobMarket2.settings
        run: poetry run pytest -n auto --html=pytest-report.html --self-contained-html

      - name: Upload pytest report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pytest-report
          path: pytest-report.html
          retention-days: 7

      - name: Fail if tests failed
        if: ${{ steps.tests.outcome == 'failure' }}
        run: exit 1
